VS Code Terminal
----------------
npx npm cache clean--force
npm start --reset-cache
clear
npx npm install
npx npm install -g react-native-cli
npm view react-native version
react-native -v
npx react-native upgrade
react-native upgrade

CMD - Creating a New Project
----------------------------
cd D:\MEGAsync\Software_Development\Mobile_App_Development\React_Native
Set-ExecutionPolicy RemoteSigned \\ to use npx react-native as react-native
npx react-native init ProjectName
npx react-native init ProjectName --version 0.68.2 \\react-native init ProjectName --version 0.71.2
npx react-native start \\ react-native start --reset-cache
Open a New Terminal by clicking the plus button
npx react-native run-android

CMD - Troubleshoot
------------------
npm audit fix --force

cd android -> ./gradlew clean -> cd..
cd android
./gradlew clean
cd..

npm i //run this after deleting node modules

npm uninstall //aliases: unlink, remove, rm, r, un

Debugging
---------
VSCode -> Extensions -> React Native Tools -> Install
VSCode -> Run and Debug -> create a launch.json file -> React Native -> Attach to packager -> OK
npm run android

Flexbox
-------
https://reactnative.dev/docs/flexbox.html
https://snack.expo.dev/rySUxTKuZ

React Native Fundamentals
-------------------------
https://mindmajix.com/react-native-interview-questions
https://www.knowledgehut.com/interview-questions/react-native
https://www.fullstack.cafe/blog/react-native-interview-questions
https://www.testgorilla.com/blog/react-native-interview-questions/
https://engineeringinterviewquestions.com/react-native-interview-questions-answers-pdf/
https://www.educative.io/blog/top-react-native-interview-questions

React Native Webview
--------------------
https://www.npmjs.com/package/react-native-webview
npx npm i react-native-webview
check package.json dependencies for library install verification

React Navigation
----------------
https://reactnavigation.org/docs/getting-started
npx npm install @react-navigation/native
npx npm install react-native-screens react-native-safe-area-context
check package.json dependencies for library install verification

Stack Navigation - One page to another
https://reactnavigation.org/docs/stack-navigator/
npx npm install @react-navigation/stack
npx npm install react-native-gesture-handler

Drawer Navigation - Side bar
https://reactnavigation.org/docs/drawer-navigator#installation
npx npm install @react-navigation/drawer
npx npm install react-native-gesture-handler react-native-reanimated
babel.config.js =>

module.exports = {
  presets: ['module:metro-react-native-babel-preset'],
  plugins: ['react-native-reanimated/plugin'],
};

react-native start --reset-cache

Tab Navigation - Menus with icons (Top)
https://reactnavigation.org/docs/material-top-tab-navigator/
npm install @react-navigation/material-top-tabs react-native-tab-view
npm install react-native-pager-view
https://www.npmjs.com/package/react-native-vector-icons
npm i react-native-vector-icons
https://oblador.github.io/react-native-vector-icons/

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle" // add this line in android/app/build.gradle

include ':react-native-vector-icons' // add this line in android/settings.gradle
project(':react-native-vector-icons').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-vector-icons/android') // add this line in android/settings.gradle

Bottom Tab Navigation - Menus with icons
https://reactnavigation.org/docs/bottom-tab-navigator/
npm install @react-navigation/bottom-tabs

https://callstack.github.io/react-native-paper/searchbar.html
npm install react-native-paper

React Native Dropdown Picker
https://www.npmjs.com/package/react-native-dropdown-picker
npm i react-native-dropdown-picker
https://snack.expo.dev/8mHmLfcZf

React Native Networking
-----------------------
ActivityIndicator for data fetch (Retrieval of data)
https://api.sampleapis.com/coffee/hot
Function calling  lifecycle: constructor => Component => componentDidMount

https://www.npmjs.com/package/axios
npm i axios

https://www.digitalocean.com/community/tutorials/react-axios-react
https://blog.logrocket.com/how-to-make-http-requests-like-a-pro-with-axios/
https://zetcode.com/javascript/axios/
https://www.atatus.com/blog/how-to-perform-http-requests-with-axios-a-complete-guide/

React Native Class Components
-----------------------------
Mounting: Constructor => GetDerivedStateFromProps => Render => Component

Updating: GetDerivedStateFromProps => Render => componentDidUpdate
shouldComponentUpdate: GetDerivedStateFromProps => shouldComponentUpdate

Unmounting: Constructor => GetDerivedStateFromProps => Render => componentWillUnmount => Component

React Native Functional Components
----------------------------------
Hooks: State Hooks, Effect Hooks, Reducer Hooks, Contest Hooks, Bending Hooks, Hooks Api Reference
Hooks: State of methods to support Functional Components
State: Value of a variable
useState: Manage states in a Functional Component
useEffect: To run background Effect
useContest: Communication(share data) b/w 2 components

https://www.npmjs.com/package/expo-status-bar
npm i expo-status-bar

Async Storage
-------------
Async Storage = App User Data
https://www.npmjs.com/package/@react-native-async-storage/async-storage
npm i @react-native-async-storage/async-storage

https://snack.expo.dev/@aboutreact/async-storage-example?platform=web

Installation
npm install @react-native-community/async-storage --save

To Import AsyncStorage in Code
import AsyncStorage from ‘@react-native-community/async-storage’

Store the value in AsyncStorage
AsyncStorage.setItem(‘any_key_here’, this.state.textInputData);

Get the value from the AsyncStorage
AsyncStorage.getItem(‘any_key_here’)
.then(value =>
 //AsyncStorage returns a promise so adding a callback to get the value
 this.setState({ getValue: value }) //Setting the value in Text );

Realm
-----
https://www.npmjs.com/package/realm
npm i realm@10.10.1

Installation
npm install --save realm

Maps
----

https://www.npmjs.com/package/react-native-maps
npm i react-native-maps

https://github.com/react-native-maps/react-native-maps/blob/master/docs/installation.md

Add your API key to your manifest file (android/app/src/main/AndroidManifest.xml):

<application>
   <!-- You will only need to add this meta-data tag, but make sure it's a child of application -->
   <meta-data
     android:name="com.google.android.geo.API_KEY"
     android:value="Your Google maps API Key Here"/>
</application>

Google maps API Key
https://console.cloud.google.com/apis/credentials
AIzaSyDRKyUzBNnGeLdKXfL0xZmkHmQueJs5z5A
AIzaSyCkaHMlRjNoS8Rdt0aRKuMAE4gk1QiGy-4

https://www.npmjs.com/package/react-native-geolocation-service
npm i react-native-geolocation-service

Add below to your manifest file (android/app/src/main/AndroidManifest.xml):
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

https://console.cloud.google.com/apis/library/geocoding-backend.googleapis.com // ENABLE
https://console.cloud.google.com/apis/library/geolocation.googleapis.com // ENABLE

https://www.npmjs.com/package/react-native-google-places-autocomplete
npm i react-native-google-places-autocomplete

https://console.cloud.google.com/apis/library/places-backend.googleapis.com // ENABLE

Firebase: set of hosting services
---------------------------------
package="com.soft.firebase" // change package id (any id) in android/app/BUCK
applicationId "com.soft.firebase" // change package id (any id) in android/app/build.gradle
package="com.soft.firebase" // change package id (any id) in android/app/src/main/AndroidManifest.xml
package com.soft.firebase; // change package id (any id) in android/app/src/main/java\com\../MainActivity.java
package com.soft.firebase; // change package id (any id) in android/app/src/main/java\com\../MainApplication.java

ProjectName\android\app\src\main\java\com\soft\firebase // change project folder structure if package name is changed

https://console.firebase.google.com/
Firebase/Project Overview/Add Firebase to your Android app => Add package/app ID => download google-services.json file => Move your downloaded google-services.json file into your module (app-level) root directory (android\app).

classpath 'com.google.gms:google-services:4.3.15' // add this line in dependencies of android/build.gradle

apply plugin: 'com.google.gms.google-services' // add this line in android/app/build.gradle
implementation platform('com.google.firebase:firebase-bom:31.2.1') // add this line in dependencies of android/app/build.gradle
implementation 'com.google.firebase:firebase-analytics-ktx' // add this line in dependencies of android/app/build.gradle

Messaging
---------
https://www.npmjs.com/package/react-native-firebase
npm i react-native-firebase

import io.invertase.firebase.messaging.RNFirebaseMessagingPackage; // add this line in android/app/src/main/java\com\../MainApplication.java
import io.invertase.firebase.notifications.RNFirebaseNotificationPackage; // add this line in android/app/src/main/java\com\../MainApplication.java
packages.add(new RNFirebaseMessagingPackage()); // add this line in getPackages of android/app/src/main/java\com\../MainApplication.java
packages.add(new RNFirebaseNotificationPackage()); // add this line in getPackages of android/app/src/main/java\com\../MainApplication.java

Add below lines to your manifest file (android/app/src/main/AndroidManifest.xml):
    <application>
      <!-- You will only need to add below lines, but make sure it's a child of application -->
      <service android:name="io.invertase.firebase.messaging.RNFirebaseMessagingService">
      <intent-filter>
      <action android:name="com.google.firebase.MESSAGING_EVENT"/>
      </intent-filter>
      </service>
    </application>

//classpath 'com.google.gms:google-services:4.3.15' // add this line in dependencies of android/app/build.gradle

implementation "com.google.android.gms:play-services-base:16.1.0" // add this line in dependencies of android/app/build.gradle
implementation "com.google.firebase:firebase-core:17.0.1" // add this line in dependencies of android/app/build.gradle
implementation "com.google.firebase:firebase-messaging:19.0.1" // add this line in dependencies of android/app/build.gradle

react-native unlink react-native-firebase
react-native link react-native-firebase

https://console.firebase.google.com/
Firebase/Project/Engage/messaging => Create your first campaign => Firebase Notification messages => Compose notification => Select app => ... => Review => Publish

Realtime Database
-----------------
https://www.npmjs.com/package/@react-native-firebase/app
npm i @react-native-firebase/app
https://rnfirebase.io
react-native link @react-native-firebase/app

https://www.npmjs.com/package/@react-native-firebase/database
npm i @react-native-firebase/database
react-native link @react-native-firebase/database

Firebase/Project/Build/Realtime Database => Create database => Start in test mode (change later to lock mode in rules) => Compose notification => Select app => ... => Review => Publish

Authentication
--------------
https://www.npmjs.com/package/@react-native-firebase/auth
npm i @react-native-firebase/auth
react-native link @react-native-firebase/auth
https://rnfirebase.io/reference/auth

Firebase/Project/Build/Authentication => Email/Password => Enable Email/Password => Save

Firebase/Project/Build/Authentication => Sign-in method => Add new provider => Phone => Enable => Save =>Phone numbers for testing (optional)

RazorPay
--------
https://www.npmjs.com/package/react-native-razorpay
npm i react-native-razorpay

Publishing
----------
https://stackoverflow.com/questions/3997748/how-can-i-create-a-keystore
https://stackoverflow.com/questions/64450227/powershell-and-java-keytool-suppress-all-keytool-output
keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
Move your my-release-key.keystore file into your module (app-level) root directory (android\app).
MYAPP_UPLOAD_STORE_FILE=my-release-key.keystore // add this line in android/gradle.properties
MYAPP_UPLOAD_KEY_ALIAS=alias_name // add this line in android/gradle.properties
MYAPP_UPLOAD_STORE_PASSWORD= // add this line in android/gradle.properties
MYAPP_UPLOAD_KEY_PASSWORD= // add this line in android/gradle.properties
// Add below lines to your signingConfigs below debug{} of android/app/build.gradle
release {
    if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
      storeFile file('MYAPP_UPLOAD_STORE_FILE')
      storePassword 'MYAPP_UPLOAD_STORE_PASSWORD'
      keyAlias 'MYAPP_UPLOAD_KEY_ALIAS'
      keyPassword 'MYAPP_UPLOAD_KEY_PASSWORD'
    }
  }
// Make below changes to your release{} in buildTypes of android/app/build.gradle
signingConfig signingConfigs.debug => signingConfig signingConfigs.release

cd android -> ./gradlew bundleRelease -> cd..
cd android
./gradlew bundleRelease
cd..

android\app\build\outputs\bundle\release\app-release.aab // use app-release.aab in App bundles for initial testing release (or) production release

Adroid Studio -> Generate Signed Bundle / APK -> 

Flatlist
--------
use flatlist or scrollview
https://github.com/binujababu5059/Todo-App
https://github.com/shafeerInmakes
https://github.com/vishalpwr
horizontal={true}
https://snack.expo.dev/@ajmalpkc/floating-action-button-with-flatlist

https://snack.expo.dev/@professorxii/scrollview

https://blog.expo.dev/react-native-flatlist-made-easy-20fca51e0327

Embedded Video
--------------
https://aboutreact.com/youtube-video-integration-in-react-native/

<iframe width="560" height="315" src="https://www.youtube.com/embed/UF8uR6Z6KLc" frameborder="0" 
 allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>